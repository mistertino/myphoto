variables:
  IMAGE_NAME: nextjs-ci
  IMAGE_TAG: '1.0'
  IMAGE_ENV: 'ENV'
  SERVER_USER: polymath
  SERVER_IP: "20.115.117.121"
  APP_NAME: "next-app"

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEPLOYMENT_BRANCH

stages:
  - build
  - deploy

build_image:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build --build-arg=$IMAGE_ENV -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  # before_script:
  #   - chmod 400 $SSH_KEY
  script:
    # - ssh -o StrictHostKeyChecking=no -i $SSH_KEY polymath@20.115.117.121 "
    #     docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
    #     docker pull $IMAGE_NAME:$IMAGE_TAG &&
    #     docker ps -a | grep -q "$APP_NAME" && docker stop $APP_NAME && docker rm $APP_NAME &&
    #     docker run -d -p 5000:3000 --name $APP_NAME $IMAGE_NAME:$IMAGE_TAG"
    - kubectl config set-cluster my-cluster --server=https://your-kubernetes-server --certificate-authority=/path/to/your/ca.crt
    - kubectl config set-credentials my-user --username=your-username --password=your-password
    - kubectl config set-context my-cluster --cluster=my-cluster --user=my-user --namespace=your-namespace
    - kubectl config use-context my-cluster
    - kubectl set image deployment/your-deployment your-container=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

